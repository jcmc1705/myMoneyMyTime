name: CI Pipeline

on:
  pull_request:
    branches: [ main ]

jobs:
  analysis:
    name: 🔍 Análise Estática (Lint + Prettier)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Instalar dependências
      run: npm install

    - name: Rodar ESLint
      run: npx nx lint nome-do-projeto

    - name: Checar Prettier
      run: npx prettier --check .

  unit-tests:
    name: Testes Unitários
    runs-on: ubuntu-latest
    needs: analysis

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Instalar dependências
      run: npm install

    - name: Rodar testes unitários
      run: npx nx test nome-do-projeto --code-coverage

  integration-tests:
    name: Testes Integrados
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Instalar dependências
      run: npm install

    - name: Rodar testes integrados
      run: npm run test:integration

  coverage-check:
    name: Verificar cobertura mínima
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Instalar dependências
      run: npm install

    - name: Rodar testes para gerar cobertura
      run: npx nx test nome-do-projeto --code-coverage

    - name: Verificar cobertura mínima (80%)
      run: |
        COVERAGE=$(npx jest --coverage --coverageReporters=text-summary | grep 'Statements' | awk '{print $2}' | sed 's/%//')
        echo "Cobertura atual: $COVERAGE%"
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "Cobertura abaixo de 80%!"
          exit 1
        fi
